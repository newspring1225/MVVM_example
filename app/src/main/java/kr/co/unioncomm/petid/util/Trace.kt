package kr.co.unioncomm.petid.utilimport android.util.Logimport kr.co.unioncomm.petid.BuildConfig/** * API for sending log output. * * Generally, you should use the Trace.v(), Trace.d(), Trace.i(), Trace.w(), and Trace.e() methods to write logs. * You can then view the logs in logcat. * @see Log */object Trace {    private const val TAG = "petID"    private val isUserBuild = BuildConfig.DEBUG    /**     * Logcat 에 Error에 해당하는 스트링을 출력     * @param str 출력하는 [String] 값을 입력     */    fun e(str: String) {        if (isUserBuild) {            val e = Exception()            val element = e.stackTrace[1]            val element1 = e.stackTrace[2]            val log = String.format("[%s : %s] %s %s %s", element.fileName, element.lineNumber, element1.fileName, element1.lineNumber, str)            Log.e(TAG, log)        }    }    /**     * Logcat 에 Warning에 해당하는 스트링을 출력     * @param str 출력하는 [String] 값을 입력     */    fun w(str: String) {        if (isUserBuild) {            val e = Exception()            val element = e.stackTrace[1]            val element1 = e.stackTrace[2]            val log = String.format("[%s : %s] %s %s %s", element.fileName, element.lineNumber, element1.fileName, element1.lineNumber, str)            Log.w(TAG, log)        }    }    /**     * Logcat 에 Infor에 해당하는 스트링을 출력     * @param str 출력하는 [String] 값을 입력     */    fun i(str: String) {        if (isUserBuild) {            val e = Exception()            val element = e.stackTrace[1]            val log = String.format("[%s : %d] %s", element.fileName, element.lineNumber, str)            Log.i(TAG, log)        }    }    /**     * Logcat 에 Debug에 해당하는 스트링을 출력     * @param str 출력하는 [String] 값을 입력     */    fun d(str: String) {        if (isUserBuild) {            val e = Exception()            val element = e.stackTrace[1]            val log = String.format("[%s : %d] %s", element.fileName, element.lineNumber, str)            Log.d(TAG, log)        }    }    /**     * Logcat 에 verbose에 해당하는 스트링을 출력     * @param str 출력하는 [String] 값을 입력     */    fun v(str: String) {        if (isUserBuild) {            val e = Exception()            val element = e.stackTrace[1]            val log = String.format("[%s : %d] %s", element.fileName, element.lineNumber, str)            Log.v(TAG, log)        }    }}